package services;

import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.Consumes;
import javax.ws.rs.CookieParam;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.HeaderParam;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedMap;
import javax.ws.rs.core.NewCookie;
import javax.ws.rs.core.PathSegment;
import javax.ws.rs.core.Response;

import org.jboss.resteasy.annotations.Form;


@Path("/demo")
public class TestService {

	/**
	 * Testira REST sistem. URL izgleda ovako: <code>rest/demo/test</code>
	 * 
	 * @return Vraæa tekst da vidimo da sve radi.
	 */
	@GET
	@Path("/test")
	@Produces(MediaType.TEXT_PLAIN)
	public String test() {
		return "REST is working.";
	}

	/**
	 * Testira PathParam. URL izgleda ovako:
	 * <code>rest/demo/book/101-456-890</code>
	 * 
	 * @param isbn
	 *            PathParam tip parametra, odn. deo putanje.
	 * @return Vraæa odštampane primljene parametre.
	 */
	@GET
	@Path("/book/{isbn}")
	public String getBook(@PathParam("isbn") String isbn) {
		return "/rest/demo/book received PathParam 'isbn': " + isbn;
	}

	/**
	 * Testira PathParam sa PathSegment tipom parametra. URL izgleda ovako:
	 * <code>rest/demo/booksegment/101-456-890;name=Sabrana dela;author=Pera Periæ</code>
	 * 
	 * @param id
	 *            PathParam tip parametra, ali nije string, nego mapa
	 *            parametara.
	 * @return Vraæa odštampane primljene parametre.
	 */
	@GET
	@Path("/booksegment/{id}")
	@Produces(MediaType.TEXT_PLAIN)
	public String getBook(@PathParam("id") PathSegment id) {
		String retVal = "/rest/demo/booksegment received PathParam 'id', with PathSegment 'id'\n" + "path: "
				+ id.getPath() + "\n" + "segmentMap: " + id.getMatrixParameters() + "\n" + "segment.name: "
				+ id.getMatrixParameters().get("name");
		return retVal;
	}

	/**
	 * Testira QueryParam tip parametra. URL izgleda ovako:
	 * <code>rest/demo/books?num=12345</code>
	 * 
	 * @param num
	 *            QueryParam tip parametra; ovakav parametar je uobièajen za
	 *            forme.
	 * @return Vraæa odštampane primljene parametre.
	 */
	@GET
	@Path("/books")
	public String getBooks(@QueryParam("num") int num) {
		return "/rest/demo/books received QueryParam 'num': " + num;
	}

	/**
	 * Testira HeaderParam tip parametra. URL izgleda ovako:
	 * <code>rest/demo/testheader</code>
	 * 
	 * @param ua
	 *            HeaderParam tip parametra; ovakav parametar je deo HTTP
	 *            request zaglavlja.
	 * @return Vraæa odštampane primljene parametre.
	 */
	@GET
	@Path("/testheader")
	public String getHeader(@HeaderParam("Cookie") String ck) {
		return "/rest/demo/testheader received HeaderParam 'Cookie': " + ck;
	}

	/**
	 * Testira CookieParam tip parametra. URL izgleda ovako:
	 * <code>rest/demo/testcookie</code>
	 * 
	 * @param id
	 *            CookieParam tip parametra; ovakav parametar je deo HTTP
	 *            request zaglavlja.
	 * @return Vraæa odštampane primljene parametre.
	 */
	@GET
	@Path("/testcookie")
	@Produces(MediaType.TEXT_HTML)
	public Response getBooks(@CookieParam("pera") javax.ws.rs.core.Cookie id) {
		if (id == null) {
			NewCookie ck = new NewCookie("pera", "Perin kolacic");
			return Response.ok("/rest/demo/testcookie <b>created</b> CookieParam 'pera': " + ck.getValue(),
					MediaType.TEXT_HTML).cookie(ck).build();
		}
		return Response
				.ok("/rest/demo/testcookie <i><u>received</u></i> CookieParam 'pera': " + id, MediaType.TEXT_HTML)
				.build();
	}

	

}
